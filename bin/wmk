#!/bin/bash

my_dir() {
    # Make sure that we resolve our location even if we're
    # being called through as symlink
    src="${BASH_SOURCE[0]}"
    while [ -h "$src" ]; do
        trg="$(readlink "$src")"
        if [[ $trg == /* ]]; then
            # $scr is an absolute symlink to $trg
            src="$trg"
        else
            # $src is a relative symlink to $trg (relative to $dir)
            dir="$(dirname "$src")"
            src="$dir/$trg"
        fi
    done
    echo $(dirname "$src")
}

# Assumes that this script is in bin/ inside the wmk repository and that the
# python virtual environment is in $wmk_home/venv

SCRIPT_HOME=$(my_dir)
WMK_HOME=$(dirname "$SCRIPT_HOME")
ACTION="$1"
BASEDIR="$2"

. $WMK_HOME/venv/bin/activate

if test -d "$BASEDIR"
then
    case "$ACTION" in
        s|srv|serve)
            python3 -m http.server 7007 --bind 127.0.0.1 --directory "$BASEDIR/htdocs"
            ;;
        r|b|run|build)
            $WMK_HOME/process_pages.py "$BASEDIR"
            ;;
        w|watch)
            cd "$BASEDIR"
            while true; do
                $WMK_HOME/process_pages.py "$BASEDIR"
                inotifywait -e modify -e attrib -e close_write -e create -e delete -e delete_self -r assets data content static templates
                sleep 1
            done
            ;;
        debug|env|info)
            echo "WMK ENVIRONMENT:"
            echo "  - wmk home: $WMK_HOME"
            echo "  - work directory: $(realpath "$BASEDIR")"
            ;;
        *)
            echo "Usage: wmk serve|run|watch|info dirname"
            echo "See $WMK_HOME/readme.md for documentation"
            exit 1
            ;;
    esac
else
    echo "Usage: wmk serve|run|watch|info dirname"
    # echo "Need a basedir as second argument"
    echo "See $WMK_HOME/readme.md for documentation"
    exit 1
fi
